{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@clarkwinkelmann/sudo-mode/webpack/bootstrap","webpack://@clarkwinkelmann/sudo-mode/webpack/runtime/compat get default export","webpack://@clarkwinkelmann/sudo-mode/webpack/runtime/define property getters","webpack://@clarkwinkelmann/sudo-mode/webpack/runtime/hasOwnProperty shorthand","webpack://@clarkwinkelmann/sudo-mode/webpack/runtime/make namespace object","webpack://@clarkwinkelmann/sudo-mode/external root \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/sudo-mode/external root \"flarum.core.compat['forum/app']\"","webpack://@clarkwinkelmann/sudo-mode/external root \"flarum.core.compat['forum/utils/UserControls']\"","webpack://@clarkwinkelmann/sudo-mode/external root \"flarum.core.compat['common/app']\"","webpack://@clarkwinkelmann/sudo-mode/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@clarkwinkelmann/sudo-mode/external root \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/sudo-mode/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@clarkwinkelmann/sudo-mode/external root \"flarum.core.compat['common/utils/withAttr']\"","webpack://@clarkwinkelmann/sudo-mode/./src/common/components/SudoModal.ts","webpack://@clarkwinkelmann/sudo-mode/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@clarkwinkelmann/sudo-mode/./src/forum/index.ts","webpack://@clarkwinkelmann/sudo-mode/./src/common/utils/requireSudoMode.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/UserControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/withAttr'];","import app from 'flarum/common/app';\nimport Button from 'flarum/common/components/Button';\nimport Modal, {IInternalModalAttrs} from 'flarum/common/components/Modal';\nimport withAttr from 'flarum/common/utils/withAttr';\n\ninterface SudoModalAttrs extends IInternalModalAttrs {\n    onsubmit: () => void\n}\n\nexport default class SudoModal extends Modal<SudoModalAttrs> {\n    password: string = ''\n\n    className() {\n        return 'SudoModal Modal--small';\n    }\n\n    title() {\n        return app.translator.trans('clarkwinkelmann-sudo-mode.lib.sudo.title');\n    }\n\n    content() {\n        return m('.Modal-body', [\n            m('.Form-group', [\n                m('p', app.translator.trans('clarkwinkelmann-sudo-mode.lib.sudo.message'))\n            ]),\n            m('.Form-group', [\n                m('input.FormControl', {\n                    type: 'password',\n                    autocomplete: 'current-password',\n                    value: this.password,\n                    onchange: withAttr('value', (value: string) => {\n                        this.password = value;\n                    }),\n                    placeholder: app.translator.trans('clarkwinkelmann-sudo-mode.lib.sudo.password'),\n                }),\n            ]),\n            'clarkwinkelmann-passwordless' in flarum.extensions && flarum.extensions['clarkwinkelmann-passwordless'].TokenRequest ? m(flarum.extensions['clarkwinkelmann-passwordless'].TokenRequest, {\n                errorHandler: this.onerror.bind(this),\n                onErrorClear: () => {\n                    this.alertAttrs = null;\n                },\n            }) : null,\n            m('.Form-group', [\n                Button.component({\n                    type: 'submit',\n                    className: 'Button Button--primary',\n                }, app.translator.trans('clarkwinkelmann-sudo-mode.lib.sudo.submit')),\n            ])\n        ]);\n    }\n\n    onsubmit(event: Event) {\n        event.preventDefault();\n\n        this.loading = true;\n\n        app.request<any>({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/sudo-mode',\n            body: {\n                password: this.password,\n            },\n            errorHandler: this.onerror.bind(this),\n        }).then(response => {\n            if (typeof response === 'object' && response.expires) {\n                app.forum.data.attributes!.sudoModeExpires = response.expires;\n            }\n\n            this.loading = false;\n            this.hide();\n\n            this.attrs.onsubmit();\n        });\n    }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import {override} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport User from 'flarum/common/models/User';\nimport UserControls from 'flarum/forum/utils/UserControls';\nimport requireSudoMode from '../common/utils/requireSudoMode';\n\napp.initializers.add('clarkwinkelmann-sudo-mode', () => {\n    function userActionWithSudo(original: (user: User) => any, user: User) {\n        if (!user.attribute('couldEditWithSudo')) {\n            return original(user);\n        }\n\n        requireSudoMode().then(newSudo => {\n            if (newSudo) {\n                // Refresh user with new permissions\n                app.store.find('users', user.id()!).then(() => {\n                    // Prevent issues when going from one modal to another\n                    setTimeout(() => {\n                        original(user);\n                    }, 300);\n                });\n            } else {\n                original(user);\n            }\n        });\n    }\n\n    override(UserControls, 'editAction', userActionWithSudo);\n    override(UserControls, 'deleteAction', userActionWithSudo);\n});\n","import app from 'flarum/common/app';\nimport SudoModal from '../components/SudoModal';\n\n/**\n * Checks if sudo mode is enabled and prompt to enter if necessary.\n * Resolves promise with false if already in sudo mode.\n * Resolves promise with true if successfully entered sudo mode.\n * Rejects promise if user cannot be prompted.\n * Never resolves if the user closes the sudo modal.\n */\nexport default function (): Promise<boolean> {\n    const expires = app.forum.attribute<number>('sudoModeExpires') || 0;\n\n    if (expires > dayjs().unix()) {\n        return Promise.resolve(false);\n    }\n\n    // If the sudo modal is already open, don't try to open it again\n    // This is useful for the admin panel where a loop tries to open the modal\n    if (app.modal.modalList.some(item => item.componentClass === SudoModal)) {\n        return Promise.reject();\n    }\n\n    return new Promise(resolve => {\n        app.modal.show(SudoModal, {\n            onsubmit: () => {\n                resolve(true);\n            },\n        }, true);\n    });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","SudoModal","_Modal","subClass","superClass","_this","_len","arguments","length","args","Array","_key","apply","concat","password","create","constructor","_proto","className","title","app","trans","content","_this2","m","type","autocomplete","this","onchange","withAttr","placeholder","extensions","TokenRequest","errorHandler","onerror","onErrorClear","alertAttrs","Button","onsubmit","event","_this3","preventDefault","loading","method","url","attribute","body","then","response","expires","data","attributes","sudoModeExpires","hide","attrs","Modal","add","userActionWithSudo","original","user","dayjs","unix","Promise","resolve","modalList","some","item","componentClass","reject","show","newSudo","find","id","setTimeout","override","UserControls"],"sourceRoot":""}